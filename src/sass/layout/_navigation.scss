@use "../abstract/variables" as vars;
@use "../abstract/mixins" as respond;

.nav {
  grid-column: 1 / -1;

  background-color: vars.$color-white;
  position: absolute;
  top: -10px;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 60vh;

  z-index: 11;
  visibility: hidden;
  opacity: 0;

  transform: translateY(100%);
  transition: all 0.5s ease-in-out;

  @include respond.respond(tab-port) {
    grid-column: 3 / span 1;
    position: static;
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
    height: auto;
  }

  &__list {
    margin-top: 2rem;
    list-style-type: none;

    @include respond.respond(tab-port) {
      display: flex;
      justify-content: end;
      margin-top: 0;
    }
  }

  &__item {
    position: relative;
    border: 2px solid transparent;
    position: relative;

    &:not(:last-child) {
      margin-right: 1rem;
    }

    &:hover::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      width: 2px;
      background-color: rgba(vars.$color-black, 0.2);

      @include respond.respond(tab-port) {
        display: none;
      }
    }

    //animate borders
    @include respond.respond(tab-port) {
      .border-top {
        position: absolute;
        top: 0;
        left: 0px;
        width: 0;
        height: 2px;
        background-color: vars.$color-black;
        transition: width 0.1s;
      }

      .border-right {
        position: absolute;
        top: 0;
        right: 0;
        width: 2px;
        height: 0;
        background-color: vars.$color-black;
        transition: height 0.1s 0.1s;
      }

      .border-bottom {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 0;
        height: 2px;
        background-color: vars.$color-black;
        transition: width 0.1s 0.2s;
      }

      .border-left {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 2px;
        height: 0;
        background-color: vars.$color-black;
        transition: height 0.1s 0.3s;
      }

      &:hover .border-top {
        width: 100%;
      }

      &:hover .border-right {
        height: 100%;
      }

      &:hover .border-bottom {
        width: 100%;
      }

      &:hover .border-left {
        height: 100%;
      }

      &:not(:hover) .border-top {
        transition: width 0.1s 0.3s;
      }

      &:not(:hover) .border-right {
        transition: height 0.1s 0.2s;
      }

      &:not(:hover) .border-bottom {
        transition: width 0.1s 0.1s;
      }

      &:not(:hover) .border-left {
        transition: height 0.1s;
      }

      &.active .border-top,
      &.active .border-right,
      &.active .border-bottom,
      &.active .border-left {
        background-color: transparent;
        opacity: 0;
      }
    }

    &.active {
      @include respond.respond(tab-port) {
        border: 2px solid vars.$color-black;
      }

      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        width: 2px;
        background-color: vars.$color-black;

        @include respond.respond(tab-port) {
          display: none;
        }
      }
    }
  }

  &__link,
  &__link:link,
  &__link:visited {
    position: relative;
    font-family: "Mulish", sans-serif;
    font-size: 2rem;
    display: inline-block;
    padding: 1rem 1.6rem;
    overflow: hidden;
    color: vars.$color-black;
    text-decoration: none;
    font-weight: 400;
    transition: all 0.3s;
    border: 2px solid transparent;
    transform: translateZ(0);
    text-align: center;
  }
}

.nav.open {
  visibility: visible;
  opacity: 1;
  transform: translateY(71px);
}
